# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- build
- test
- deploy
brakeman-scan:
  stage: test
  script:
  - echo "Brakeman scan..."
  - echo "Scan complete."
bundle-audit:
  stage: build
  script:
  - echo "Bundle audit..."
  - echo "Scan complete"
yarn-audit:
  stage: build
  script: 
  - echo "Yarn audit..."
  - echo "Scan complete"
ruby-bom:
  stage: build
  script:
  - echo "Ruby SBOM Generation..."
  - echo "Generation Complete"
owasp-scan: 
  stage: test
  #TODO: check gitlab security templates for this scan
  #TODO: Owasp Dail Scan
  script:
  - echo "OWASP ZAP Scan..."
  - echo "Scan Complete"
pa11y-scan: 
  stage: test
  script:
  - echo "Pa11y Scan..."
  - echo "Scan Complete"
rspec:
  stage: test
  script:
  - echo "Rspec..."
  - echo "Rspec Complete"


deploy-staging:
  stage: deploy
  environment: staging
  script: 
  - echo "deploy staging"
deploy-production:
  stage: deploy
  environment: production
  script: 
  - echo "deploy staging"
terraform-staging:
  stage: deploy
  environment: staging
  script: 
  - echo "deploy staging"
terraform-production:
  stage: deploy
  environment: production
  script: 
  - echo "deploy production"

sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml

